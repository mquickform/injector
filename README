Dependency Injector

The Dependency Injector will be a cross target dependency handler. It will use the haXe RTTI framework to enable injection of classes into class instances decorated with the metatag @inject.

The Dependency Injector will facilitate class variable and property injection in phase one of its development.

 SHAPE  \* MERGEFORMAT 

The Dependency Injector will provide a core class called Injector. This class will provide the following functionality :-

mapInstance
This method will map a specific type to an object or class instance. When the type is used and a request for injection provided, the mapped instance will be injected.

mapClass
mapClass maps a specific type to a class. When the type is used and a request for injection is provided, a new instance of the toInstantiate class will be injected.

mapSingleton
This will map a specific type to a single instance of itself. If the forSingleton parameter is passed, then the type class will map to a single instance of the forSingleton type.

inject
inject will recursively parse the passed class and it’s member classes and will inject each one using the current mapping rules.

instantiate
This will instantiate a class and pass it to the inject method. It will then return the instance.

getInstance
This method will return a singleton or stored value for a given type.

getMap
This will return a current mapping rule for a given type.

hasMap
hasMap returns true only if a mapping rule currently exists for a given type.

unmap
The unmap method removes any mapping rule for a given type.

Usage
The Dependency Injector will automatically perform injections on all classes passed as a mapping target. Types will not be checked unless supplied as a target in a separate mapping. Class properties and member variables will be queried to see if they implement the haxe.RTTI.Infos interface. If they do, these will also be checked and injected, as will their properties, and so on, using a recursive loop. Each injected class will be stored, by type, in a local stack, so that infinite recursion does not occur.

Only classes that include haxe.RTTI.Infos can be injected. As a rule, all core MVC framework classes (in the MVC project) will extend a base class implementing haxe.RTTI.Infos. A context class in this framework will be the parent tree item that will instigate injection.


Releases

0.1 - This release is credited to Lee Sylvester (Lazarus404)
